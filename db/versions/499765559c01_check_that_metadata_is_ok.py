"""Check that metadata is OK

Revision ID: 499765559c01
Revises: 101d7cf93dfb
Create Date: 2014-08-18 19:53:38.251680

"""

# revision identifiers, used by Alembic.
revision = '499765559c01'
down_revision = '101d7cf93dfb'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_author_name'), 'author', ['name'])
    op.drop_constraint(u'name', 'author', type_='unique')
    op.create_unique_constraint(op.f('uq_city_name'), 'city', ['name'])
    op.create_unique_constraint(op.f('uq_city_site_name'), 'city_site', ['name'])
    op.create_unique_constraint(op.f('uq_column_number'), 'column', ['number'])
    op.drop_constraint(u'number', 'column', type_='unique')
    op.create_unique_constraint(op.f('uq_dynasty_name'), 'dynasty', ['name'])
    op.drop_constraint(u'name', 'dynasty', type_='unique')
    op.create_unique_constraint(op.f('uq_eponym_name'), 'eponym', ['name'])
    op.create_unique_constraint(op.f('uq_function_name'), 'function', ['name'])
    op.create_unique_constraint(op.f('uq_genre_name'), 'genre', ['name'])
    op.create_unique_constraint(op.f('uq_instance_filename'), 'instance', ['filename'])
    op.drop_constraint(u'filename', 'instance', type_='unique')
    op.create_unique_constraint(op.f('uq_iteration_number'), 'iteration', ['number'])
    op.drop_constraint(u'number', 'iteration', type_='unique')
    op.create_unique_constraint(op.f('uq_language_name'), 'language', ['name'])
    op.create_unique_constraint(op.f('uq_line_number'), 'line', ['number'])
    op.drop_constraint(u'number', 'line', type_='unique')
    op.create_unique_constraint(op.f('uq_locality_area'), 'locality', ['area'])
    op.create_unique_constraint(op.f('uq_medium_name'), 'medium', ['name'])
    op.create_unique_constraint(op.f('uq_method_name'), 'method', ['name'])
    op.create_unique_constraint(op.f('uq_non_ruler_corresp_name'), 'non_ruler_corresp', ['name'])
    op.create_unique_constraint(op.f('uq_period_name'), 'period', ['name'])
    op.create_unique_constraint(op.f('uq_ruler_name'), 'ruler', ['name'])
    op.create_unique_constraint(op.f('uq_script_type_script'), 'script_type', ['script'])
    op.create_unique_constraint(op.f('uq_sub_locality_name'), 'sub_locality', ['name'])
    op.create_unique_constraint(op.f('uq_sub_period_name'), 'sub_period', ['name'])
    op.drop_constraint(u'name', 'sub_period', type_='unique')
    op.create_unique_constraint(op.f('uq_surface_name'), 'surface', ['name'])
    op.drop_constraint(u'name', 'surface', type_='unique')
    op.create_unique_constraint(op.f('uq_tablet_museum_number'), 'tablet', ['museum_number'])
    op.drop_constraint(u'museum_number', 'tablet', type_='unique')
    op.create_unique_constraint(op.f('uq_text_vehicle_name'), 'text_vehicle', ['name'])
    op.create_unique_constraint(op.f('uq_year_year'), 'year', ['year'])
    op.drop_constraint(u'year', 'year', type_='unique')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(u'year', 'year', ['year'])
    op.drop_constraint(op.f('uq_year_year'), 'year', type_='unique')
    op.drop_constraint(op.f('uq_text_vehicle_name'), 'text_vehicle', type_='unique')
    op.create_unique_constraint(u'museum_number', 'tablet', ['museum_number'])
    op.drop_constraint(op.f('uq_tablet_museum_number'), 'tablet', type_='unique')
    op.create_unique_constraint(u'name', 'surface', ['name'])
    op.drop_constraint(op.f('uq_surface_name'), 'surface', type_='unique')
    op.create_unique_constraint(u'name', 'sub_period', ['name'])
    op.drop_constraint(op.f('uq_sub_period_name'), 'sub_period', type_='unique')
    op.drop_constraint(op.f('uq_sub_locality_name'), 'sub_locality', type_='unique')
    op.drop_constraint(op.f('uq_script_type_script'), 'script_type', type_='unique')
    op.drop_constraint(op.f('uq_ruler_name'), 'ruler', type_='unique')
    op.drop_constraint(op.f('uq_period_name'), 'period', type_='unique')
    op.drop_constraint(op.f('uq_non_ruler_corresp_name'), 'non_ruler_corresp', type_='unique')
    op.drop_constraint(op.f('uq_method_name'), 'method', type_='unique')
    op.drop_constraint(op.f('uq_medium_name'), 'medium', type_='unique')
    op.drop_constraint(op.f('uq_locality_area'), 'locality', type_='unique')
    op.create_unique_constraint(u'number', 'line', ['number'])
    op.drop_constraint(op.f('uq_line_number'), 'line', type_='unique')
    op.drop_constraint(op.f('uq_language_name'), 'language', type_='unique')
    op.create_unique_constraint(u'number', 'iteration', ['number'])
    op.drop_constraint(op.f('uq_iteration_number'), 'iteration', type_='unique')
    op.create_unique_constraint(u'filename', 'instance', ['filename'])
    op.drop_constraint(op.f('uq_instance_filename'), 'instance', type_='unique')
    op.drop_constraint(op.f('uq_genre_name'), 'genre', type_='unique')
    op.drop_constraint(op.f('uq_function_name'), 'function', type_='unique')
    op.drop_constraint(op.f('uq_eponym_name'), 'eponym', type_='unique')
    op.create_unique_constraint(u'name', 'dynasty', ['name'])
    op.drop_constraint(op.f('uq_dynasty_name'), 'dynasty', type_='unique')
    op.create_unique_constraint(u'number', 'column', ['number'])
    op.drop_constraint(op.f('uq_column_number'), 'column', type_='unique')
    op.drop_constraint(op.f('uq_city_site_name'), 'city_site', type_='unique')
    op.drop_constraint(op.f('uq_city_name'), 'city', type_='unique')
    op.create_unique_constraint(u'name', 'author', ['name'])
    op.drop_constraint(op.f('uq_author_name'), 'author', type_='unique')
    ### end Alembic commands ###
